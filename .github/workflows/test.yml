name: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    
jobs:
  tests:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (R ${{ matrix.R }})
    strategy:
      fail-fast: false
      matrix:
        R: [ '3.4', '3.5', '3.6', '4.0' ] 
        config: 
         - {os: ubuntu-16.04, rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
         - {os: windows-latest}
         - {os: macos-latest} 
           
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
    
    steps:
      - uses: actions/checkout@v2
        
      - name: Setup R 
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.R }}
      
      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v1
      
      - name: Query dependencies
        shell: Rscript {0}        
        run: |
          install.packages('remotes', repos='https://cloud.r-project.org')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)          
          # Rscript -e "deps <- devtools::dev_package_deps(dependencies = NA); remotes::install_deps(dependencies = TRUE, upgrade='never'); if (!all(deps$$package %in% installed.packages())) { message('missing: ', paste(setdiff(deps$$package, installed.packages()), collapse=', ')); q(status = 1, save = 'no')}"
      
      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-
          
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sudo apt-get -y update && sudo apt-get install -y libcurl4-openssl-dev
          # Rscript -e "remotes::install_github('r-hub/sysreqs')"
          # sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          # sudo -s eval "$sysreqs"
      
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: 0
          _R_CHECK_DOC_SIZES_: 0
          _R_CHECK_TESTS_NLINES_: 0
        run: _R_CHECK_DOC_SIZES_=0 R_CHECK_DOC_SIZES=0 Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--as-cran'), error_on = 'warning', check_dir = 'check')"
        shell: bash

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
      
      - name: Build docs
        shell: Rscript {0}
        run: pkgdown::build_site()
          
